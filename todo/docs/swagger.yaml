definitions:
  main.CreateTodoRequest:
    properties:
      content:
        type: string
    type: object
  main.Todo:
    properties:
      content:
        description: Todo의 내용
        type: string
      created_at:
        description: 생성 시간
        type: string
      id:
        description: MongoDB의 ObjectId로 매핑
        type: string
      is_completed:
        description: 완료 여부
        type: boolean
      updated_at:
        description: 수정 시간
        type: string
    type: object
  main.UpdateTodoRequest:
    properties:
      content:
        type: string
      is_completed:
        type: boolean
    type: object
info:
  contact: {}
paths:
  /api/todos:
    get:
      produces:
      - application/json
      responses:
        "200":
          description: List of all Todo items"               // 성공 시 모든 Todo 항목을 배열로
            반환
          schema:
            items:
              $ref: '#/definitions/main.Todo'
            type: array
        "500":
          description: Internal server error"  // 서버 내부 오류 발생 시 500 오류 반환
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Get all todos
      tags:
      - Todo
    post:
      consumes:
      - application/json
      parameters:
      - description: Todo item to create
        in: body
        name: todo
        required: true
        schema:
          $ref: '#/definitions/main.CreateTodoRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created Todo item"                // 성공적으로 생성된 Todo 항목을 반환
          schema:
            $ref: '#/definitions/main.Todo'
        "400":
          description: Invalid request body" // 요청 본문이 유효하지 않을 경우 400 오류 반환
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal server error" // 서버 내부 오류 발생 시 500 오류 반환
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Create a new todo
      tags:
      - Todo
  /api/todos/{id}:
    delete:
      parameters:
      - description: Todo ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Todo item deleted successfully" // 성공 시 삭제된 Todo 항목의 ID 반환
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Invalid ID format"            // ID 형식 오류 시 400 오류 반환
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal server error"        // 서버 내부 오류 발생 시 500 오류 반환
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Delete a todo
      tags:
      - Todo
    get:
      parameters:
      - description: Todo ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Todo item retrieved successfully"     // 성공 시 조회된 Todo 항목 반환
          schema:
            $ref: '#/definitions/main.Todo'
        "400":
          description: Invalid ID format"       // ID 형식 오류 시 400 오류 반환
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Todo not found"          // 해당 ID의 Todo 항목이 없을 경우 404 오류 반환
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal server error"   // 서버 내부 오류 발생 시 500 오류 반환
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Get a specific todo
      tags:
      - Todo
    put:
      consumes:
      - application/json
      parameters:
      - description: Todo ID
        in: path
        name: id
        required: true
        type: string
      - description: Todo item to update
        in: body
        name: todo
        required: true
        schema:
          $ref: '#/definitions/main.UpdateTodoRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Updated Todo item"                         // 성공 시 업데이트된 Todo
            항목 반환
          schema:
            $ref: '#/definitions/main.Todo'
        "400":
          description: Invalid ID format or request" // ID 형식 또는 요청 본문 오류 시 400 오류
            반환
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal server error"        // 서버 내부 오류 발생 시 500 오류 반환
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Update an existing todo
      tags:
      - Todo
swagger: "2.0"
